Performance Testing :

Performance Testing is to ensure the application under test works as expected with the maximum load 

The focus of Performance Testing is checking a software program's

Speed - Determines whether the application responds quickly
Scalability - Determines maximum user load the software application can handle.
Stability - Determines if the application is stable under varying loads

Types of Performance Testing

Load testing - checks the application's ability to perform under anticipated user loads. 
Stress testing - involves testing an application under extreme workloads to see how it 
handles high traffic or data processing.
Endurance testing - is done to make sure the software can handle the expected load over a long period of time.
Spike testing - tests the software's reaction to sudden large spikes or increase in the load generated by users.
Volume testing - Under Volume Testing large no. of. Data is populated in database and 
the overall software system's behavior is monitored.
Scalability testing - The objective of scalability testing is to determine the 
software application's effectiveness in "scaling up" 
to support an increase in user load. It helps plan capacity addition to your software system.

Performance testing metrics
A number of performance metrics, also known as key performance indicators (KPIs), 
can help an organization evaluate current performance compared to baselines.

Performance metrics commonly include:

Throughput: how many units of information a system processes over a specified time;
Throughput - rate a computer or network receives requests per second.
Memory: the working storage space available to a processor or workload;
Response time, or latency: the amount of time that elapses between a user-entered request and the start of a system's response to that request;
Bandwidth: the volume of data per second that can move between workloads, usually across a network;
CPU interrupts per second: the number of hardware interrupts a process receives per second.
These metrics and others help an organization perform multiple types of performance tests.

Other Factors:
Processor Usage - amount of time processor spends executing non-idle threads.
Memory use - amount of physical memory available to processes on a computer.
Disk time - amount of time disk is busy executing a read or write request.
Bandwidth - shows the bits per second used by a network interface.
Private bytes - number of bytes a process has allocated that can't be shared amongst other processes. 
These are used to measure memory leaks and usage.
Committed memory - amount of virtual memory used.
Memory pages/second - number of pages written to or read from the disk in order 
to resolve hard page faults. Hard page faults are when code not from the current working 
set is called up from elsewhere and retrieved from a disk.
Page faults/second - the overall rate in which fault pages are processed by the processor. 
This again occurs when a process requires code from outside its working set.
CPU interrupts per second - is the avg. number of hardware interrupts a processor 
is receiving and processing each second.
Disk queue length - is the avg. no. of read and write requests queued for 
the selected disk during a sample interval.
Network output queue length - length of the output packet queue in packets. 
Anything more than two means a delay and bottlenecking needs to be stopped.
Network bytes total per second - rate which bytes are sent and received on 
the interface including framing characters.
Response time - time from when a user enters a request until the first character of the response is received.
Amount of connection pooling - the number of user requests that are met by pooled connections.
The more requests met by connections in the pool, the better the performance will be.
Maximum active sessions - the maximum number of sessions that can be active at once.
Hit ratios - This has to do with the number of SQL statements that are handled by 
cached data instead of expensive I/O operations. This is a good place to start for solving bottlenecking issues.
Hits per second - the no. of hits on a web server during each second of a load test.
Rollback segment - the amount of data that can rollback at any point in time.
Database locks - locking of tables and databases needs to be monitored and carefully tuned.
Top waits - are monitored to determine what wait times can be cut down when dealing with the 
how fast data is retrieved from memory
Thread counts - An applications health can be measured by the no. of threads that are running and currently active.
Garbage collection - It has to do with returning unused memory back to the system. 
Garbage collection needs to be monitored for efficiency.
